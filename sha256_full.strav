% Required declarations
TOKENS = /0\1\2/
NUM_WORK_REGISTERS = 30
INPUT = 01101000011001010110110001101100011011110010000001110111011011110111001001101100011001001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011000

$h0 = 01101010000010011110011001100111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
$h
$h
$h
$h
$h
$h
$h

$k
$k
$k
$k
$k
$k
$k6 = 10010010001111111000001010100100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
$k
$k
$k
$k
$k
$k
$k
$k
$k
$k
$k
$k
$k
$k
$k
$k
$k
$k
$k25 = 10101000001100011100011001101101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
$k
$k
$k
$k29 = 11010101101001111001000101000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
$k
$k
$k32 = 00100111101101110000101010000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
$k
$k
$k
$k
$k
$k
$k
$k
$k
$k
$k
$k
$k45 = 11010110100110010000011000100100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
$k
$k
$k48 = 00011001101001001100000100010110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
$k49 = 00011110001101110110110000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
$k
$k51 = 00110100101100001011110010110101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
$k
$k
$k
$k
$k
$k57 = 01111000101001010110001101101111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
$k58 = 10000100110010000111100000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
$k
$k
$k
$k
$k63 = 11000110011100010111100011110010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

% Actual program

PROGRAM_START
wc = copy_input()
w0 = copy(wc)
w1 = copy(wc)
w2 = copy(wc)
w3 = copy(wc)
w4 = copy(wc)
w5 = copy(wc)
w6 = copy(wc)
w7 = copy(wc)
w8 = copy(wc)
w9 = copy(wc)
w10 = copy(wc)
w11 = copy(wc)
w12 = copy(wc)
w13 = copy(wc)
w14 = copy(wc)
w15 = copy(wc)

shiftl_(w0, 32 * 0)
shiftl_(w1, 32 * 1)
shiftl_(w2, 32 * 2)
shiftl_(w3, 32 * 3)
shiftl_(w4, 32 * 4)
shiftl_(w5, 32 * 5)
shiftl_(w6, 32 * 6)
shiftl_(w7, 32 * 7)
shiftl_(w8, 32 * 8)
shiftl_(w9, 32 * 9)
shiftl_(w10, 32 * 10)
shiftl_(w11, 32 * 11)
shiftl_(w12, 32 * 12)
shiftl_(w13, 32 * 13)
shiftl_(w14, 32 * 14)
shiftl_(w15, 32 * 15)

print_(w0)
print_(w1)
print_(w2)
print_(w3)
print_(w4)
print_(w5)
print_(w6)
print_(w7)
print_(w8)
print_(w9)
print_(w10)
print_(w11)
print_(w12)
print_(w13)
print_(w14)
print_(w15)

s0_a = copy(w1)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w1)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w1)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w14)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w14)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w14)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w0, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w9)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w16 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w2)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w2)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w2)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w15)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w15)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w15)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w1, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w10)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w17 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w3)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w3)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w3)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w16)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w16)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w16)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w2, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w11)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w18 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w4)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w4)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w4)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w17)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w17)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w17)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w3, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w12)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w19 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w5)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w5)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w5)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w18)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w18)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w18)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w4, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w13)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w20 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w6)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w6)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w6)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w19)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w19)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w19)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w5, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w14)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w21 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w7)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w7)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w7)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w20)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w20)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w20)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w6, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w15)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w22 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w8)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w8)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w8)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w21)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w21)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w21)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w7, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w16)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w23 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w9)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w9)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w9)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w22)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w22)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w22)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w8, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w17)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w24 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w10)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w10)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w10)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w23)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w23)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w23)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w9, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w18)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w25 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w11)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w11)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w11)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w24)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w24)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w24)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w10, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w19)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w26 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w12)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w12)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w12)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w25)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w25)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w25)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w11, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w20)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w27 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w13)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w13)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w13)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w26)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w26)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w26)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w12, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w21)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w28 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w14)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w14)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w14)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w27)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w27)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w27)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w13, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w22)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w29 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w15)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w15)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w15)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w28)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w28)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w28)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w14, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w23)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w30 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w16)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w16)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w16)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w29)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w29)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w29)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w15, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w24)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w31 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w17)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w17)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w17)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w30)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w30)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w30)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w16, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w25)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w32 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w18)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w18)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w18)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w31)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w31)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w31)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w17, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w26)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w33 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w19)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w19)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w19)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w32)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w32)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w32)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w18, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w27)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w34 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w20)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w20)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w20)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w33)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w33)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w33)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w19, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w28)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w35 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w21)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w21)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w21)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w34)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w34)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w34)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w20, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w29)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w36 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w22)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w22)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w22)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w35)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w35)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w35)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w21, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w30)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w37 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w23)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w23)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w23)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w36)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w36)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w36)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w22, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w31)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w38 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w24)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w24)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w24)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w37)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w37)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w37)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w23, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w32)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w39 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w25)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w25)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w25)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w38)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w38)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w38)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w24, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w33)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w40 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w26)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w26)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w26)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w39)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w39)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w39)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w25, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w34)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w41 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w27)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w27)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w27)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w40)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w40)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w40)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w26, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w35)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w42 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w28)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w28)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w28)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w41)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w41)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w41)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w27, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w36)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w43 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w29)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w29)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w29)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w42)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w42)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w42)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w28, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w37)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w44 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w30)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w30)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w30)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w43)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w43)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w43)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w29, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w38)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w45 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w31)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w31)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w31)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w44)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w44)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w44)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w30, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w39)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w46 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w32)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w32)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w32)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w45)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w45)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w45)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w31, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w40)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w47 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w33)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w33)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w33)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w46)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w46)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w46)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w32, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w41)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w48 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w34)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w34)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w34)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w47)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w47)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w47)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w33, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w42)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w49 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w35)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w35)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w35)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w48)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w48)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w48)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w34, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w43)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w50 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w36)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w36)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w36)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w49)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w49)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w49)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w35, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w44)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w51 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w37)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w37)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w37)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w50)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w50)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w50)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w36, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w45)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w52 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w38)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w38)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w38)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w51)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w51)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w51)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w37, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w46)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w53 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w39)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w39)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w39)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w52)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w52)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w52)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w38, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w47)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w54 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w40)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w40)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w40)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w53)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w53)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w53)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w39, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w48)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w55 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w41)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w41)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w41)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w54)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w54)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w54)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w40, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w49)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w56 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w42)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w42)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w42)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w55)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w55)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w55)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w41, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w50)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w57 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w43)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w43)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w43)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w56)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w56)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w56)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w42, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w51)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w58 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w44)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w44)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w44)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w57)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w57)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w57)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w43, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w52)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w59 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w45)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w45)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w45)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w58)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w58)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w58)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w44, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w53)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w60 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w46)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w46)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w46)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w59)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w59)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w59)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w45, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w54)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w61 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w47)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w47)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w47)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w60)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w60)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w60)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w46, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w55)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w62 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)

s0_a = copy(w48)
rotate_with_limit_(s0_a, 7, 32)
s0_b = copy(w48)
rotate_with_limit_(s0_b, 18, 32)
s0_c = copy(w48)
shiftr_(s0_c, 3)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
s1_a = copy(w61)
rotate_with_limit_(s1_a, 17, 32)
s1_b = copy(w61)
rotate_with_limit_(s1_b, 19, 32)
s1_c = copy(w61)
shiftr_(s1_c, 10)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
add_step_1 = add(w47, s0)
print_(add_step_1)
add_step_2 = add(add_step_1, w56)
print_(add_step_2)
add_step_3 = add(add_step_2, s1)
print_(add_step_3)
w63 = copy(add_step_3)
del(s0_a, s0_b, s0_c, s0_d, s0, s1_a, s1_b, s1_c, s1_d, s1, add_step_1, add_step_2, add_step_3)


print_(w16)
print_(w17)
print_(w18)
print_(w19)
print_(w20)
print_(w21)
print_(w22)
print_(w23)
print_(w24)
print_(w25)

a = copy(h0)
b = copy(h1)
c = copy(h2)
d = copy(h3)
e = copy(h4)
f = copy(h5)
g = copy(h6)
h = copy(h7)
print_(a)
print_(b)
print_(c)
print_(d)
print_(e)
print_(f)
print_(g)
print_(h)


s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k0)
temp1 = add(add_step_3, w0)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k1)
temp1 = add(add_step_3, w1)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k2)
temp1 = add(add_step_3, w2)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k3)
temp1 = add(add_step_3, w3)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k4)
temp1 = add(add_step_3, w4)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k5)
temp1 = add(add_step_3, w5)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k6)
temp1 = add(add_step_3, w6)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k7)
temp1 = add(add_step_3, w7)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k8)
temp1 = add(add_step_3, w8)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k9)
temp1 = add(add_step_3, w9)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k10)
temp1 = add(add_step_3, w10)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k11)
temp1 = add(add_step_3, w11)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k12)
temp1 = add(add_step_3, w12)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k13)
temp1 = add(add_step_3, w13)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k14)
temp1 = add(add_step_3, w14)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k15)
temp1 = add(add_step_3, w15)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k16)
temp1 = add(add_step_3, w16)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k17)
temp1 = add(add_step_3, w17)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k18)
temp1 = add(add_step_3, w18)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k19)
temp1 = add(add_step_3, w19)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k20)
temp1 = add(add_step_3, w20)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k21)
temp1 = add(add_step_3, w21)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k22)
temp1 = add(add_step_3, w22)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k23)
temp1 = add(add_step_3, w23)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k24)
temp1 = add(add_step_3, w24)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k25)
temp1 = add(add_step_3, w25)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k26)
temp1 = add(add_step_3, w26)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k27)
temp1 = add(add_step_3, w27)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k28)
temp1 = add(add_step_3, w28)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k29)
temp1 = add(add_step_3, w29)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k30)
temp1 = add(add_step_3, w30)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k31)
temp1 = add(add_step_3, w31)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k32)
temp1 = add(add_step_3, w32)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k33)
temp1 = add(add_step_3, w33)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k34)
temp1 = add(add_step_3, w34)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k35)
temp1 = add(add_step_3, w35)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k36)
temp1 = add(add_step_3, w36)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k37)
temp1 = add(add_step_3, w37)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k38)
temp1 = add(add_step_3, w38)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k39)
temp1 = add(add_step_3, w39)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k40)
temp1 = add(add_step_3, w40)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k41)
temp1 = add(add_step_3, w41)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k42)
temp1 = add(add_step_3, w42)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k43)
temp1 = add(add_step_3, w43)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k44)
temp1 = add(add_step_3, w44)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k45)
temp1 = add(add_step_3, w45)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k46)
temp1 = add(add_step_3, w46)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k47)
temp1 = add(add_step_3, w47)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k48)
temp1 = add(add_step_3, w48)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k49)
temp1 = add(add_step_3, w49)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k50)
temp1 = add(add_step_3, w50)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k51)
temp1 = add(add_step_3, w51)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k52)
temp1 = add(add_step_3, w52)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k53)
temp1 = add(add_step_3, w53)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k54)
temp1 = add(add_step_3, w54)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k55)
temp1 = add(add_step_3, w55)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k56)
temp1 = add(add_step_3, w56)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k57)
temp1 = add(add_step_3, w57)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k58)
temp1 = add(add_step_3, w58)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k59)
temp1 = add(add_step_3, w59)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k60)
temp1 = add(add_step_3, w60)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k61)
temp1 = add(add_step_3, w61)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k62)
temp1 = add(add_step_3, w62)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

s1_a = copy(e)
rotate_with_limit_(s1_a, 6, 32)
s1_b = copy(e)
rotate_with_limit_(s1_b, 11, 32)
s1_c = copy(e)
rotate_with_limit_(s1_c, 25, 32)
s1_d = xor(s1_a, s1_b)
s1 = xor(s1_c, s1_d)
print_(s1_a)
print_(s1_b)
print_(s1_c)
print_(s1_d)
print_(s1)

ch_a = copy(e)
not_(ch_a)
ch_b = and(ch_a, g)
ch_c = and(e, f)
ch = xor(ch_b, ch_c)
print_(ch_a)
print_(ch_b)
print_(ch_c)
print_(ch)

add_step_1 = add(h, s1)
add_step_2 = add(add_step_1, ch)
add_step_3 = add(add_step_2, k63)
temp1 = add(add_step_3, w63)
print_(add_step_1)
print_(add_step_2)
print_(add_step_3)
print_(temp1)

s0_a = copy(a)
rotate_with_limit_(s0_a, 2, 32)
s0_b = copy(a)
rotate_with_limit_(s0_b, 13, 32)
s0_c = copy(a)
rotate_with_limit_(s0_c, 22, 32)
s0_d = xor(s0_a, s0_b)
s0 = xor(s0_c, s0_d)
print_(s0_a)
print_(s0_b)
print_(s0_c)
print_(s0_d)
print_(s0)

maj_a = and(a, b)
maj_b = and(a, c)
maj_c = and(b, c)
maj_d = xor(maj_a, maj_b)
maj = xor(maj_c, maj_d)
print_(maj_a)
print_(maj_b)
print_(maj_c)
print_(maj_d)
print_(maj)

temp2 = add(s0, maj)
print_(temp2)

del(h)
h = copy(g)
del(g)
g = copy(f)
del(f)
f = copy(e)
del(e)
e = add(d, temp1)
del(d)
d = copy(c)
del(c)
c = copy(b)
del(b)
b = copy(a)
del(a)
a = add(temp1, temp2)

del(s1_a, s1_b, s1_c, s1_d, s1, ch_a, ch_b, ch_c, ch, add_step_1, add_step_2, add_step_3, temp1, s0_a, s0_b, s0_c, s0_d, s0, maj_a, maj_b, maj_c, maj_d, maj, temp2)

print_(h)
print_(g)
print_(f)
print_(e)
print_(d)
print_(c)
print_(b)
print_(a)

h0_final = add(h0, a)
h1_final = add(h1, b)
h2_final = add(h2, c)
h3_final = add(h3, d)
h4_final = add(h4, e)
h5_final = add(h5, f)
h6_final = add(h6, g)
h7_final = add(h7, h)

print_(h0_final)
print_(h1_final)
print_(h2_final)
print_(h3_final)
print_(h4_final)
print_(h5_final)
print_(h6_final)
print_(h7_final)

PROGRAM_END
